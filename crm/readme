1、完成用户的登录功能
    1.完善功能逻辑
    2.设计功能页面
    3.整体功能算是一个大的主业务( 登录 )，辅助业务( 重置 验证码获取 )
    4. 先完成辅助业务
        1) 重置，使用重置按钮
        2) 验证码，不和主业务一起请求，所以需要使用单独的事件进行触发( 点击事件 )，请求后端，ajax异步请求
          验证码图片：( 长宽高、颜色、干扰线、验证码 )  使用第三方的jar包 hutool.jar
            获取图片验证码： ShearCaptcha captcha = CaptchaUtil.createShearCaptcha(200, 100, 6, 4);


2、代码逻辑
    获取验证码
        1、用户访问本页面的时候，默认生成一张图片验证码   servlet 页面中数据的设置
        2、用户点击图片，可以随机更换一个验证码
        3、用户录入验证码时，验证验证码的位数。( 一个用户什么数据都没有输入的时候，就可以疯狂获取验证码 )
            1.验证用户名格式的正确性
            2.验证用户名的真实性
            3.使用时间间隔的方式，手机验证码方面
        4、成功，发出登录请求，失败，弹框重新录入



    登录功能
        1、所有的验证，先前端 --> 后端；先进性格式判断 三个格式
        2、后端验证、先验证验证码的正确性
        3、验证账号密码的真实性，数据库
        4、返回给前端的数据，告诉前端，登录用户，以及是否登录成功；



layui页面布局
    1、页面中js css 文件的引入
        使用相对路径 两种方式  以 / 开头     根据配置的web项目中 / 所代表的位置 而定
                             不以 / 开头    相对于本文件的路径    从两个路径相同的地方开始往下定义




数据分页
    1、何为分页：
        1.将数据拆成每页显示固定数量，而不是在一个页面中全部展示；
           将分页看成： java对象  ( 当前页数 、 每页显示数量 、 总记录数 、 总页数 、 当前页面中的数据 )
    2、使用分页
        1.在Java中创建一个分页对象



数据新增：
    1、在页面中添加一个新增模板，因为模板是通过点击事件显示在页面中的，所以把模板定义在script标记中，当成一个弹出层的内容
        名称、手机号、地址、公司、职位、生日、客户状态、客户来源、客户分类、负责人



1、完善登录、退出功能、过滤非法请求(未登录 的用户进行后端的接口访问 )
    1.用户登录，将登录的用户数据保存再服务器端

    2.用户点击退出时，清空当前的session中登录用户

    3.当session中不包含登录用户的情况下，不让通过浏览器路径直接进行访问，需要跳转到登录页面进行登录
        1、一个项目中的请求包含：( 静态资源js css png html ...  动态资源jsp servlet )
            明确：过滤 未登录的用户 请求非登录页面所必须的 动态资源
        2、使用Filter过滤器来进行对请求的过滤，而不是通过servlet的判断
            用法和servlet一样，



1、修改用户密码
    1、编写页面 包含( 4个输入框 1当前登录得用户 2原始密码 3新密码 4确认密码  2个提交按钮 1确定 2取消 )
    2、前端：
        1.两次密码得验证、
        2.向后端传递数据
    3、后端数据：原始密码、新密码
        sql : update user set password = xxx where id = xx ;session中拿



Filter过滤器
    不像servlet，只能匹配一个路径，只能走一个servlet
    一个请求路径，只能经过一个servlet(匹配一个)，但是可以经过多个过滤器(匹配多个)，


修改用户头像(用到图片的上传)
    1、编写修改头像页面



tomcat改乱码
    打开tomcat文件夹

